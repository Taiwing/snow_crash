/
type=rizin rz-db project
version=5

/core
blocksize=0x800
offset=0x80487ce

/core/analysis

/core/analysis/blocks
0x8048408={"size":26,"jump":134513703,"fail":134513698,"traced":true,"ninstr":8,"op_pos":[1,4,9,10,16,22,24],"stackptr":8,"parent_stackptr":0}
0x8048422={"size":5,"jump":134513703,"ninstr":1,"stackptr":-8,"parent_stackptr":8}
0x8048427={"size":15,"traced":true,"ninstr":5,"op_pos":[5,10,13,14],"stackptr":-8,"parent_stackptr":8}
0x8048450={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048460={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048470={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048480={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048490={"size":6,"ninstr":1,"parent_stackptr":0}
0x80484a0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80484b0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80484c0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80484d0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80484e0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80484f0={"size":33,"traced":true,"ninstr":13,"op_pos":[2,3,5,8,9,10,11,16,21,22,23,28],"stackptr":28,"parent_stackptr":0}
0x8048520={"size":16,"jump":134514031,"fail":134513968,"traced":true,"ninstr":6,"op_pos":[1,3,4,7,14],"stackptr":12,"parent_stackptr":0}
0x8048530={"size":26,"jump":134514024,"fail":134513994,"traced":true,"ninstr":7,"op_pos":[5,10,16,19,22,24],"stackptr":12,"parent_stackptr":12}
0x804854a={"size":6,"jump":134514000,"traced":true,"ninstr":1,"stackptr":12,"parent_stackptr":12}
0x8048550={"size":24,"jump":134514000,"fail":134514024,"traced":true,"ninstr":6,"op_pos":[3,8,15,20,22],"parent_stackptr":12}
0x8048568={"size":7,"jump":134514031,"traced":true,"ninstr":1,"stackptr":-4,"parent_stackptr":12}
0x804856f={"size":6,"traced":true,"ninstr":4,"op_pos":[3,4,5],"stackptr":-4,"parent_stackptr":12}
0x8048580={"size":15,"jump":134514081,"fail":134514063,"traced":true,"ninstr":6,"op_pos":[1,3,6,11,13],"stackptr":28,"parent_stackptr":0}
0x804858f={"size":9,"jump":134514081,"fail":134514072,"traced":true,"ninstr":3,"op_pos":[5,7],"stackptr":28,"parent_stackptr":28}
0x8048598={"size":9,"jump":134514081,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":20,"parent_stackptr":28}
0x80485a1={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":20,"parent_stackptr":28}
0x80485a4={"size":48,"traced":true,"ninstr":19,"op_pos":[1,3,4,5,8,15,20,23,26,31,33,35,38,41,44,45,46,47],"stackptr":-4,"parent_stackptr":0}
0x80485d4={"size":17,"jump":134514211,"traced":true,"ninstr":7,"op_pos":[1,3,4,5,8,15],"stackptr":28,"parent_stackptr":0}
0x80485e5={"size":37,"jump":134514224,"fail":134514186,"traced":true,"ninstr":12,"op_pos":[3,6,9,14,17,19,24,26,28,31,35],"stackptr":28,"parent_stackptr":28,"cmpval":1}
0x804860a={"size":15,"jump":134514207,"fail":134514201,"traced":true,"ninstr":6,"op_pos":[3,6,8,11,13],"stackptr":28,"parent_stackptr":28,"cmpval":10}
0x8048619={"size":6,"jump":134514225,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28}
0x804861f={"size":4,"jump":134514211,"traced":true,"ninstr":1,"stackptr":28,"parent_stackptr":28}
0x8048623={"size":11,"jump":134514149,"fail":134514222,"traced":true,"ninstr":4,"op_pos":[3,6,9],"stackptr":28,"parent_stackptr":28}
0x804862e={"size":2,"jump":134514225,"ninstr":1,"stackptr":28,"parent_stackptr":28}
0x8048630={"size":1,"jump":134514225,"traced":true,"ninstr":1,"stackptr":-4,"parent_stackptr":28}
0x8048631={"size":21,"traced":true,"ninstr":10,"op_pos":[3,6,8,11,14,17,18,19,20],"parent_stackptr":-4}
0x8048646={"size":21,"jump":134514345,"traced":true,"ninstr":7,"op_pos":[1,3,6,13,16,19],"stackptr":20,"parent_stackptr":0}
0x804865b={"size":16,"jump":134514316,"traced":true,"ninstr":3,"op_pos":[7,14],"stackptr":20,"parent_stackptr":20}
0x804866b={"size":22,"jump":134514312,"fail":134514305,"traced":true,"ninstr":8,"op_pos":[3,6,9,12,15,18,20],"stackptr":20,"parent_stackptr":20}
0x8048681={"size":7,"jump":134514312,"traced":true,"ninstr":1,"stackptr":20,"parent_stackptr":20,"cmpval":1}
0x8048688={"size":4,"jump":134514316,"traced":true,"ninstr":1,"stackptr":20,"parent_stackptr":20,"cmpval":1}
0x804868c={"size":6,"jump":134514335,"fail":134514322,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":20,"parent_stackptr":20,"cmpval":1}
0x8048692={"size":13,"jump":134514283,"fail":134514335,"traced":true,"ninstr":5,"op_pos":[3,6,9,11],"stackptr":20,"parent_stackptr":20}
0x804869f={"size":6,"jump":134514357,"fail":134514341,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":20,"parent_stackptr":20,"cmpval":1}
0x80486a5={"size":4,"jump":134514345,"traced":true,"ninstr":1,"stackptr":20,"parent_stackptr":20}
0x80486a9={"size":10,"jump":134514267,"fail":134514355,"traced":true,"ninstr":4,"op_pos":[3,6,8],"stackptr":20,"parent_stackptr":20}
0x80486b3={"size":2,"jump":134514358,"ninstr":1,"stackptr":20,"parent_stackptr":20}
0x80486b5={"size":1,"jump":134514358,"traced":true,"ninstr":1,"stackptr":20,"parent_stackptr":20}
0x80486b6={"size":6,"jump":134514371,"fail":134514364,"traced":true,"ninstr":2,"op_pos":[4],"parent_stackptr":20}
0x80486bc={"size":7,"jump":134514377,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":20,"parent_stackptr":20}
0x80486c3={"size":6,"jump":134514377,"traced":true,"ninstr":2,"op_pos":[3],"stackptr":12,"parent_stackptr":20}
0x80486c9={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"parent_stackptr":12}
0x80486cb={"size":33,"jump":134514422,"fail":134514412,"traced":true,"ninstr":11,"op_pos":[1,3,6,9,13,16,19,24,27,31],"stackptr":28,"parent_stackptr":0}
0x80486ec={"size":10,"jump":134514636,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":28,"parent_stackptr":28}
0x80486f6={"size":10,"jump":134514442,"fail":134514432,"traced":true,"ninstr":4,"op_pos":[3,6,8],"stackptr":28,"parent_stackptr":28,"cmpval":45}
0x8048700={"size":10,"jump":134514636,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":28,"parent_stackptr":28}
0x804870a={"size":13,"jump":134514466,"traced":true,"ninstr":3,"op_pos":[7,11],"stackptr":28,"parent_stackptr":28}
0x8048717={"size":11,"jump":134514466,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":28,"parent_stackptr":28,"cmpval":47}
0x8048722={"size":10,"jump":134514486,"fail":134514476,"traced":true,"ninstr":4,"op_pos":[3,6,8],"stackptr":28,"parent_stackptr":28,"cmpval":47}
0x804872c={"size":10,"jump":134514455,"fail":134514486,"traced":true,"ninstr":4,"op_pos":[3,6,8],"stackptr":28,"parent_stackptr":28,"cmpval":57}
0x8048736={"size":6,"jump":134514502,"fail":134514492,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28}
0x804873c={"size":10,"jump":134514509,"fail":134514502,"traced":true,"ninstr":4,"op_pos":[3,6,8],"stackptr":28,"parent_stackptr":28,"cmpval":46}
0x8048746={"size":7,"jump":134514636,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":28,"parent_stackptr":28}
0x804874d={"size":13,"jump":134514533,"traced":true,"ninstr":3,"op_pos":[7,11],"stackptr":28,"parent_stackptr":28}
0x804875a={"size":11,"jump":134514533,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":28,"parent_stackptr":28,"cmpval":47}
0x8048765={"size":10,"jump":134514553,"fail":134514543,"traced":true,"ninstr":4,"op_pos":[3,6,8],"stackptr":28,"parent_stackptr":28,"cmpval":47}
0x804876f={"size":10,"jump":134514522,"fail":134514553,"traced":true,"ninstr":4,"op_pos":[3,6,8],"stackptr":28,"parent_stackptr":28,"cmpval":57}
0x8048779={"size":6,"jump":134514566,"fail":134514559,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":28,"parent_stackptr":28}
0x804877f={"size":7,"jump":134514636,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":28,"parent_stackptr":28}
0x8048786={"size":9,"jump":134514613,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":28,"parent_stackptr":28}
0x804878f={"size":27,"jump":134514609,"fail":134514602,"traced":true,"ninstr":9,"op_pos":[6,9,11,14,17,20,23,25],"stackptr":28,"parent_stackptr":28}
0x80487aa={"size":7,"jump":134514636,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":28,"parent_stackptr":28}
0x80487b1={"size":4,"jump":134514613,"traced":true,"ninstr":1,"stackptr":28,"parent_stackptr":28}
0x80487b5={"size":18,"jump":134514575,"fail":134514631,"traced":true,"ninstr":6,"op_pos":[6,9,11,14,16],"stackptr":28,"parent_stackptr":28}
0x80487c7={"size":5,"jump":134514636,"traced":true,"ninstr":1,"stackptr":20,"parent_stackptr":28}
0x80487cc={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":20,"parent_stackptr":28}
0x80487ce={"size":92,"jump":134514752,"fail":134514730,"traced":true,"ninstr":20,"op_pos":[1,3,4,5,8,14,17,21,27,34,36,44,52,60,68,76,83,88,90],"stackptr":316,"parent_stackptr":0}
0x804882a={"size":22,"jump":134515319,"traced":true,"ninstr":4,"op_pos":[7,12,17],"stackptr":316,"parent_stackptr":316}
0x8048840={"size":16,"jump":134514818,"fail":134514768,"traced":true,"ninstr":4,"op_pos":[7,12,14],"stackptr":316,"parent_stackptr":316}
0x8048850={"size":50,"jump":134515319,"traced":true,"ninstr":10,"op_pos":[5,7,12,16,24,32,35,40,45],"stackptr":316,"parent_stackptr":316}
0x8048882={"size":24,"jump":134514892,"fail":134514842,"traced":true,"ninstr":5,"op_pos":[8,15,20,22],"stackptr":316,"parent_stackptr":316}
0x804889a={"size":50,"jump":134515319,"traced":true,"ninstr":10,"op_pos":[5,7,12,16,24,32,35,40,45],"stackptr":316,"parent_stackptr":316}
0x80488cc={"size":35,"jump":134515280,"fail":134514927,"traced":true,"ninstr":6,"op_pos":[8,15,20,24,29],"stackptr":316,"parent_stackptr":316}
0x80488ef={"size":50,"jump":134515319,"traced":true,"ninstr":10,"op_pos":[5,7,12,16,24,32,35,40,45],"stackptr":316,"parent_stackptr":316}
0x8048921={"size":24,"jump":134515014,"fail":134515001,"traced":true,"ninstr":6,"op_pos":[8,12,15,20,22],"stackptr":316,"parent_stackptr":316}
0x8048939={"size":13,"jump":134515281,"traced":true,"ninstr":2,"op_pos":[8],"stackptr":316,"parent_stackptr":316}
0x8048946={"size":11,"jump":134515281,"fail":134515025,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":316,"parent_stackptr":316}
0x8048951={"size":28,"jump":134515214,"fail":134515053,"traced":true,"ninstr":6,"op_pos":[8,12,15,20,22],"stackptr":316,"parent_stackptr":316}
0x804896d={"size":6,"jump":134515172,"fail":134515059,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":316,"parent_stackptr":316,"cmpval":2}
0x8048973={"size":2,"jump":134515094,"ninstr":1,"stackptr":316,"parent_stackptr":316}
0x8048975={"size":33,"jump":134515094,"traced":true,"ninstr":10,"op_pos":[4,7,9,13,15,18,21,25,28],"stackptr":316,"parent_stackptr":316}
0x8048996={"size":52,"jump":134515061,"fail":134515146,"traced":true,"ninstr":16,"op_pos":[5,9,13,16,18,26,28,33,37,39,41,43,45,48,50],"stackptr":316,"parent_stackptr":316}
0x80489ca={"size":26,"jump":134515317,"traced":true,"ninstr":5,"op_pos":[5,9,16,21],"stackptr":316,"parent_stackptr":316}
0x80489e4={"size":42,"jump":134515317,"traced":true,"ninstr":9,"op_pos":[5,7,12,16,24,32,35,40],"stackptr":316,"parent_stackptr":316}
0x8048a0e={"size":24,"jump":134515281,"fail":134515238,"traced":true,"ninstr":6,"op_pos":[8,12,15,20,22],"stackptr":316,"parent_stackptr":316}
0x8048a26={"size":42,"jump":134515317,"traced":true,"ninstr":9,"op_pos":[5,7,12,16,24,32,35,40],"stackptr":316,"parent_stackptr":316}
0x8048a50={"size":1,"jump":134515281,"traced":true,"ninstr":1,"stackptr":316,"parent_stackptr":316}
0x8048a51={"size":36,"jump":134514977,"fail":134515317,"traced":true,"ninstr":8,"op_pos":[4,8,16,20,23,28,30],"parent_stackptr":316}
0x8048a75={"size":2,"jump":134515319,"ninstr":1,"stackptr":316,"parent_stackptr":316}
0x8048a77={"size":16,"jump":134515340,"fail":134515335,"traced":true,"ninstr":3,"op_pos":[7,14],"stackptr":316,"parent_stackptr":316}
0x8048a87={"size":5,"ninstr":1,"stackptr":316,"parent_stackptr":316}
0x8048a8c={"size":7,"traced":true,"ninstr":5,"op_pos":[3,4,5,6],"stackptr":300,"parent_stackptr":316}
0x8048aa0={"size":48,"jump":134515449,"fail":134515408,"traced":true,"ninstr":15,"op_pos":[1,2,3,4,9,15,18,22,28,33,39,41,44,46],"stackptr":44,"parent_stackptr":0}
0x8048ad0={"size":8,"jump":134515416,"traced":true,"ninstr":2,"op_pos":[2],"stackptr":44,"parent_stackptr":44}
0x8048ad8={"size":33,"jump":134515416,"fail":134515449,"traced":true,"ninstr":9,"op_pos":[4,7,11,15,19,26,29,31],"parent_stackptr":44}
0x8048af9={"size":8,"traced":true,"ninstr":6,"op_pos":[3,4,5,6,7],"stackptr":-4,"parent_stackptr":44}
0x8048b10={"size":2,"ninstr":1,"stackptr":-4,"parent_stackptr":0}
0x8048b12={"size":4,"traced":true,"ninstr":2,"op_pos":[3],"stackptr":-4,"parent_stackptr":0}
0x8048b20={"size":17,"jump":134515524,"fail":134515505,"traced":true,"ninstr":7,"op_pos":[1,3,4,7,12,15],"stackptr":12,"parent_stackptr":0}
0x8048b31={"size":7,"jump":134515512,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":12,"parent_stackptr":12}
0x8048b38={"size":12,"jump":134515512,"fail":134515524,"traced":true,"ninstr":5,"op_pos":[3,5,7,10],"parent_stackptr":12}
0x8048b44={"size":6,"traced":true,"ninstr":4,"op_pos":[3,4,5],"stackptr":-4,"parent_stackptr":12}
0x8048b4c={"size":26,"traced":true,"ninstr":9,"op_pos":[1,4,9,10,16,21,24,25],"stackptr":-8,"parent_stackptr":0}

/core/analysis/callables
_Exit=func
__assert_fail=func
__bzero=func
__cxa_throw=func
__error=func
__libc_init=func
__libc_init_array=func
__libc_start_main=func
__maskrune=func
__stack_chk_fail=func
__tolower=func
__toupper=func
__uClibc_main=func
_exit=func
abort=func
abs=func
access=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
aligned_alloc=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atan2=func
atan2f=func
atan2l=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
bind=func
bindtextdomain=func
bsearch=func
btowc=func
bzero=func
calloc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
chmod=func
clearerr=func
clock=func
close=func
compat_mode=func
connect=func
copysign=func
copysignf=func
copysignl=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
difftime=func
div=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
error=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fchmod=func
fclose=func
fdim=func
fdimf=func
fdiml=func
feclearexcept=func
fegetenv=func
fegetexceptflag=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetexceptflag=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetpos=func
fgets=func
fgetwc=func
fgetws=func
fileno=func
floor=func
floorf=func
floorl=func
fma=func
fmaf=func
fmal=func
fmax=func
fmaxf=func
fmaxl=func
fmin=func
fminf=func
fminl=func
fmod=func
fmodf=func
fmodl=func
fopen=func
fpclassify=func
fprintf=func
fputc=func
fputs=func
fputwc=func
fputws=func
fread=func
free=func
freopen=func
frexp=func
frexpf=func
frexpl=func
fscanf=func
fseek=func
fsetpos=func
fstat=func
ftell=func
fts_children_INODE64=func
fts_close_INODE64=func
fts_open_INODE64=func
fts_read_INODE64=func
fts_set_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__assert_fail.arg.0=const char *,function
func.__assert_fail.args=0x4
func.__assert_fail.noreturn=true
func.__assert_fail.ret=void
func.__bzero.arg.0=size_t,n
func.__bzero.args=0x2
func.__bzero.ret=void
func.__cxa_throw.arg.0=void *,dest
func.__cxa_throw.args=0x3
func.__cxa_throw.noreturn=true
func.__cxa_throw.ret=void
func.__error.arg.0=char *,format
func.__error.args=0x3
func.__error.ret=void
func.__libc_init.arg.0=char **,envp
func.__libc_init.args=0x3
func.__libc_init.noreturn=true
func.__libc_init.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__libc_start_main.arg.0=void *,stack_end
func.__libc_start_main.args=0x7
func.__libc_start_main.noreturn=true
func.__libc_start_main.ret=int
func.__maskrune.arg.0=long,f
func.__maskrune.args=0x2
func.__maskrune.ret=int
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func.__uClibc_main.arg.0=void *,stack_end
func.__uClibc_main.args=0x7
func.__uClibc_main.noreturn=true
func.__uClibc_main.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.access.arg.0=int,mode
func.access.args=0x2
func.access.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.aligned_alloc.arg.0=size_t,size
func.aligned_alloc.args=0x2
func.aligned_alloc.ret=void
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atan2.arg.0=double,x
func.atan2.args=0x2
func.atan2.ret=double
func.atan2f.arg.0=float,x
func.atan2f.args=0x2
func.atan2f.ret=float
func.atan2l.arg.0=long double,x
func.atan2l.args=0x2
func.atan2l.ret=long double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.bind.arg.0=socklen_t,address_len
func.bind.args=0x3
func.bind.ret=int
func.bindtextdomain.arg.0=char *,dirname
func.bindtextdomain.args=0x2
func.bindtextdomain.ret=char *
func.bsearch.arg.0=void *,compar
func.bsearch.args=0x5
func.bsearch.ret=void *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.bzero.arg.0=size_t,n
func.bzero.args=0x2
func.bzero.ret=void
func.calloc.arg.0=size_t,size
func.calloc.args=0x2
func.calloc.ret=void *
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.chmod.arg.0=int,mode
func.chmod.args=0x2
func.chmod.ret=int
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.compat_mode.arg.0=const char *,mode
func.compat_mode.args=0x2
func.compat_mode.ret=bool
func.connect.arg.0=size_t,addrlen
func.connect.args=0x3
func.connect.ret=ssize_t
func.copysign.arg.0=double,y
func.copysign.args=0x2
func.copysign.ret=double
func.copysignf.arg.0=float,y
func.copysignf.args=0x2
func.copysignf.ret=float
func.copysignl.arg.0=long double,y
func.copysignl.args=0x2
func.copysignl.ret=long double
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.difftime.arg.0=time_t,time0
func.difftime.args=0x2
func.difftime.ret=double
func.div.arg.0=int,denom
func.div.args=0x2
func.div.ret=div_t
func.entry0.args=0
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.error.arg.0=char *,format
func.error.args=0x3
func.error.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fchmod.arg.0=int,mode
func.fchmod.args=0x2
func.fchmod.ret=int
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.fdim.arg.0=double,y
func.fdim.args=0x2
func.fdim.ret=double
func.fdimf.arg.0=float,y
func.fdimf.args=0x2
func.fdimf.ret=float
func.fdiml.arg.0=long double,y
func.fdiml.args=0x2
func.fdiml.ret=long double
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetexceptflag.arg.0=int,excepts
func.fegetexceptflag.args=0x2
func.fegetexceptflag.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetexceptflag.arg.0=int,excepts
func.fesetexceptflag.args=0x2
func.fesetexceptflag.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetpos.arg.0=fpos_t *,pos
func.fgetpos.args=0x2
func.fgetpos.ret=int
func.fgets.arg.0=FILE *,stream
func.fgets.args=0x3
func.fgets.ret=char *
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fgetws.arg.0=FILE *,stream
func.fgetws.args=0x3
func.fgetws.ret=wchar_t *
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fma.arg.0=double,z
func.fma.args=0x3
func.fma.ret=double
func.fmaf.arg.0=float,z
func.fmaf.args=0x3
func.fmaf.ret=float
func.fmal.arg.0=long double,z
func.fmal.args=0x3
func.fmal.ret=long double
func.fmax.arg.0=double,y
func.fmax.args=0x2
func.fmax.ret=double
func.fmaxf.arg.0=float,y
func.fmaxf.args=0x2
func.fmaxf.ret=float
func.fmaxl.arg.0=long double,y
func.fmaxl.args=0x2
func.fmaxl.ret=long double
func.fmin.arg.0=double,y
func.fmin.args=0x2
func.fmin.ret=double
func.fminf.arg.0=float,y
func.fminf.args=0x2
func.fminf.ret=float
func.fminl.arg.0=long double,y
func.fminl.args=0x2
func.fminl.ret=long double
func.fmod.arg.0=double,y
func.fmod.args=0x2
func.fmod.ret=double
func.fmodf.arg.0=float,y
func.fmodf.args=0x2
func.fmodf.ret=float
func.fmodl.arg.0=long double,y
func.fmodl.args=0x2
func.fmodl.ret=long double
func.fopen.arg.0=const char *,mode
func.fopen.args=0x2
func.fopen.ret=FILE *
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.fprintf.arg.0=void *,va_args
func.fprintf.args=0x3
func.fprintf.ret=int
func.fputc.arg.0=FILE *,stream
func.fputc.args=0x2
func.fputc.ret=int
func.fputs.arg.0=FILE *,stream
func.fputs.args=0x2
func.fputs.ret=int
func.fputwc.arg.0=FILE *,stream
func.fputwc.args=0x2
func.fputwc.ret=wint_t
func.fputws.arg.0=FILE *,stream
func.fputws.args=0x2
func.fputws.ret=int
func.fread.arg.0=FILE *,stream
func.fread.args=0x4
func.fread.ret=size_t
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.freopen.arg.0=FILE *,stream
func.freopen.args=0x3
func.freopen.ret=FILE *
func.frexp.arg.0=int *,exp
func.frexp.args=0x2
func.frexp.ret=double
func.frexpf.arg.0=int *,exp
func.frexpf.args=0x2
func.frexpf.ret=float
func.frexpl.arg.0=int *,exp
func.frexpl.args=0x2
func.frexpl.ret=long double
func.fscanf.arg.0=void *,va_args
func.fscanf.args=0x3
func.fscanf.ret=int
func.fseek.arg.0=int,whence
func.fseek.args=0x3
func.fseek.ret=int
func.fsetpos.arg.0=fpos_t *,pos
func.fsetpos.args=0x2
func.fsetpos.ret=int
func.fstat.arg.0=void *,buf
func.fstat.args=0x2
func.fstat.ret=int
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_children_INODE64.arg.0=int,opotions
func.fts_children_INODE64.args=0x2
func.fts_children_INODE64.ret=void *
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_open_INODE64.arg.0=void *,ftsen_INODE64t
func.fts_open_INODE64.args=0x4
func.fts_open_INODE64.ret=void *
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.fts_set_INODE64.arg.0=int,options
func.fts_set_INODE64.args=0x3
func.fts_set_INODE64.ret=int
func.fwide.arg.0=int,mode
func.fwide.args=0x2
func.fwide.ret=int
func.fwprintf.arg.0=wchar_t *,format
func.fwprintf.args=0x2
func.fwprintf.ret=int
func.fwrite.arg.0=FILE *,stream
func.fwrite.args=0x4
func.fwrite.ret=size_t
func.fwscanf.arg.0=wchar_t *,format
func.fwscanf.args=0x2
func.fwscanf.ret=int
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getopt.arg.0=const char *,optstring
func.getopt.args=0x3
func.getopt.ret=int
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getsockname.arg.0=socklen_t *,addrlen
func.getsockname.args=0x3
func.getsockname.ret=int
func.getsockopt.arg.0=socklen_t *,optlen
func.getsockopt.args=0x5
func.getsockopt.ret=int
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.group_from_gid.arg.0=int,nogroup
func.group_from_gid.args=0x2
func.group_from_gid.ret=char *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.hypot.arg.0=double,y
func.hypot.args=0x2
func.hypot.ret=double
func.hypotf.arg.0=float,y
func.hypotf.args=0x2
func.hypotf.ret=float
func.hypotl.arg.0=long double,y
func.hypotl.args=0x2
func.hypotl.ret=long double
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.imaxdiv.arg.0=intmax_t,denom
func.imaxdiv.args=0x2
func.imaxdiv.ret=imaxdiv_t
func.inet_aton.arg.0=void *,pin
func.inet_aton.args=0x2
func.inet_aton.ret=int
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.initstate.arg.0=size_t,size
func.initstate.args=0x3
func.initstate.ret=char *
func.ioctl.arg.0=unsigned long,request
func.ioctl.args=0x2
func.ioctl.ret=int
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isgreater.arg.0=double,y
func.isgreater.args=0x2
func.isgreater.ret=bool
func.isgreaterequal.arg.0=double,y
func.isgreaterequal.args=0x2
func.isgreaterequal.ret=bool
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.isless.arg.0=double,y
func.isless.args=0x2
func.isless.ret=bool
func.islessequal.arg.0=double,y
func.islessequal.args=0x2
func.islessequal.ret=bool
func.islessgreater.arg.0=double,y
func.islessgreater.args=0x2
func.islessgreater.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isunordered.arg.0=double,y
func.isunordered.args=0x2
func.isunordered.ret=bool
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswctype.arg.0=wctype_t,desc
func.iswctype.args=0x2
func.iswctype.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.kill.arg.0=int,sig
func.kill.args=0x2
func.kill.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.ldexp.arg.0=int,exp
func.ldexp.args=0x2
func.ldexp.ret=double
func.ldexpf.arg.0=int,exp
func.ldexpf.args=0x2
func.ldexpf.ret=float
func.ldexpl.arg.0=int,exp
func.ldexpl.args=0x2
func.ldexpl.ret=long double
func.ldiv.arg.0=long,denom
func.ldiv.args=0x2
func.ldiv.ret=ldiv_t
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.lldiv.arg.0=long long,denom
func.lldiv.args=0x2
func.lldiv.ret=lldiv_t
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.longjmp.arg.0=int,val
func.longjmp.args=0x2
func.longjmp.ret=void
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.lstat.arg.0=void *,buf
func.lstat.args=0x2
func.lstat.ret=void
func.main.arg.0=char **,envp
func.main.args=0x3
func.main.ret=int
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.maskrune.arg.0=unsigned long,f
func.maskrune.args=0x2
func.maskrune.ret=int
func.mblen.arg.0=size_t,n
func.mblen.args=0x2
func.mblen.ret=int
func.mbrlen.arg.0=mbstate_t *,ps
func.mbrlen.args=0x3
func.mbrlen.ret=size_t
func.mbrtowc.arg.0=mbstate_t *,ps
func.mbrtowc.args=0x4
func.mbrtowc.ret=size_t
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mbsrtowcs.arg.0=mbstate_t *,ps
func.mbsrtowcs.args=0x4
func.mbsrtowcs.ret=size_t
func.mbstowcs.arg.0=size_t,n
func.mbstowcs.args=0x3
func.mbstowcs.ret=size_t
func.mbtowc.arg.0=size_t,n
func.mbtowc.args=0x3
func.mbtowc.ret=int
func.memchr.arg.0=size_t,n
func.memchr.args=0x3
func.memchr.ret=void *
func.memcmp.arg.0=size_t,n
func.memcmp.args=0x3
func.memcmp.ret=int
func.memcpy.arg.0=size_t,n
func.memcpy.args=0x3
func.memcpy.ret=void *
func.memmem.arg.0=int,little_len
func.memmem.args=0x4
func.memmem.ret=void *
func.memmove.arg.0=size_t,n
func.memmove.args=0x3
func.memmove.ret=void *
func.memset.arg.0=size_t,n
func.memset.args=0x3
func.memset.ret=void *
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.mmap.arg.0=size_t,offset
func.mmap.args=0x6
func.mmap.ret=void *
func.modf.arg.0=double *,iptr
func.modf.args=0x2
func.modf.ret=double
func.modff.arg.0=float *,iptr
func.modff.args=0x2
func.modff.ret=float
func.modfl.arg.0=long double *,iptr
func.modfl.args=0x2
func.modfl.ret=long double
func.munmap.arg.0=size_t,length
func.munmap.args=0x2
func.munmap.ret=int
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nanosleep.arg.0=struct timespec *,rem
func.nanosleep.args=0x2
func.nanosleep.ret=int
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nextafter.arg.0=double,y
func.nextafter.args=0x2
func.nextafter.ret=double
func.nextafterf.arg.0=float,y
func.nextafterf.args=0x2
func.nextafterf.ret=float
func.nextafterl.arg.0=long double,y
func.nextafterl.args=0x2
func.nextafterl.ret=long double
func.nexttoward.arg.0=long double,y
func.nexttoward.args=0x2
func.nexttoward.ret=double
func.nexttowardf.arg.0=long double,y
func.nexttowardf.args=0x2
func.nexttowardf.ret=float
func.nexttowardl.arg.0=long double,y
func.nexttowardl.args=0x2
func.nexttowardl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.nl_langinfo_l.arg.0=locale_t,locale
func.nl_langinfo_l.args=0x2
func.nl_langinfo_l.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_msgSend.arg.0=char *,selector
func.objc_msgSend.args=0x2
func.objc_msgSend.ret=void *
func.objc_msgSendSuper2.arg.0=char *,selector
func.objc_msgSendSuper2.args=0x2
func.objc_msgSendSuper2.ret=void *
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.objc_storeStrong.arg.0=int,type
func.objc_storeStrong.args=0x2
func.objc_storeStrong.ret=void *
func.open.arg.0=int,oflag
func.open.args=0x2
func.open.ret=int
func.openat.arg.0=int,oflag
func.openat.args=0x3
func.openat.ret=int
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.popen.arg.0=const char *,mode
func.popen.args=0x2
func.popen.ret=FILE *
func.pow.arg.0=double,y
func.pow.args=0x2
func.pow.ret=double
func.powf.arg.0=float,y
func.powf.args=0x2
func.powf.ret=float
func.powl.arg.0=long double,y
func.powl.args=0x2
func.powl.ret=long double
func.prctl.arg.0=unsigned long,v5
func.prctl.args=0x5
func.prctl.ret=int
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.ptrace.arg.0=void *,data
func.ptrace.args=0x4
func.ptrace.ret=long
func.putc.arg.0=FILE *,stream
func.putc.args=0x2
func.putc.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwc.arg.0=FILE *,stream
func.putwc.args=0x2
func.putwc.ret=wint_t
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.qsort.arg.0=void *,compar
func.qsort.args=0x4
func.qsort.ret=void
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.read.arg.0=size_t,nbyte
func.read.args=0x3
func.read.ret=ssize_t
func.realloc.arg.0=size_t,size
func.realloc.args=0x2
func.realloc.ret=void *
func.reallocf.arg.0=size_t,size
func.reallocf.args=0x2
func.reallocf.ret=void *
func.recv.arg.0=int,flags
func.recv.args=0x4
func.recv.ret=ssize_t
func.remainder.arg.0=double,y
func.remainder.args=0x2
func.remainder.ret=double
func.remainderf.arg.0=float,y
func.remainderf.args=0x2
func.remainderf.ret=float
func.remainderl.arg.0=long double,y
func.remainderl.args=0x2
func.remainderl.ret=long double
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.remquo.arg.0=int *,pquo
func.remquo.args=0x3
func.remquo.ret=double
func.remquof.arg.0=int *,pquo
func.remquof.args=0x3
func.remquof.ret=float
func.remquol.arg.0=int *,pquo
func.remquol.args=0x3
func.remquol.ret=long double
func.rename.arg.0=const char *,newpath
func.rename.args=0x2
func.rename.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scalbln.arg.0=long,ex
func.scalbln.args=0x2
func.scalbln.ret=double
func.scalblnf.arg.0=long,ex
func.scalblnf.args=0x2
func.scalblnf.ret=float
func.scalblnl.arg.0=long,ex
func.scalblnl.args=0x2
func.scalblnl.ret=long double
func.scalbn.arg.0=int,ex
func.scalbn.args=0x2
func.scalbn.ret=double
func.scalbnf.arg.0=int,ex
func.scalbnf.args=0x2
func.scalbnf.ret=float
func.scalbnl.arg.0=int,ex
func.scalbnl.args=0x2
func.scalbnl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.select.arg.0=struct timeval *,timeout
func.select.args=0x5
func.select.ret=int
func.send.arg.0=int,flags
func.send.args=0x4
func.send.ret=ssize_t
func.setbuf.arg.0=char *,buf
func.setbuf.args=0x2
func.setbuf.ret=void
func.setenv.arg.0=int,overwrite
func.setenv.args=0x3
func.setenv.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setlocale.arg.0=const char *,locale
func.setlocale.args=0x2
func.setlocale.ret=char *
func.setsockopt.arg.0=socklen_t,optlen
func.setsockopt.args=0x5
func.setsockopt.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.setvbuf.arg.0=size_t,size
func.setvbuf.args=0x4
func.setvbuf.ret=int
func.sigaction.arg.0=struct sigaction *,oldact
func.sigaction.args=0x3
func.sigaction.ret=int
func.signal.arg.0=void *,func
func.signal.args=0x2
func.signal.ret=void
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.snprintf.arg.0=va_list,args
func.snprintf.args=0x4
func.snprintf.ret=int
func.snprintf_chk.arg.0=va_list,args
func.snprintf_chk.args=0x4
func.snprintf_chk.ret=int
func.socket.arg.0=int,protocol
func.socket.args=0x3
func.socket.ret=int
func.sprintf.arg.0=va_list,args
func.sprintf.args=0x3
func.sprintf.ret=int
func.sprintf_chk.arg.0=va_list,args
func.sprintf_chk.args=0x3
func.sprintf_chk.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.sscanf.arg.0=va_list,args
func.sscanf.args=0x3
func.sscanf.ret=int
func.strcasecmp.arg.0=const char *,s2
func.strcasecmp.args=0x2
func.strcasecmp.ret=int
func.strcat.arg.0=const char *,s2
func.strcat.args=0x2
func.strcat.ret=char *
func.strchr.arg.0=int,c
func.strchr.args=0x2
func.strchr.ret=char *
func.strcmp.arg.0=const char *,s2
func.strcmp.args=0x2
func.strcmp.ret=int
func.strcoll.arg.0=const char *,s2
func.strcoll.args=0x2
func.strcoll.ret=int
func.strcpy.arg.0=const char *,src
func.strcpy.args=0x2
func.strcpy.ret=char *
func.strcpy_chk.arg.0=const char *,src
func.strcpy_chk.args=0x2
func.strcpy_chk.ret=char *
func.strcspn.arg.0=const char *,s2
func.strcspn.args=0x2
func.strcspn.ret=size_t
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strftime.arg.0=struct tm *,timeptr
func.strftime.args=0x4
func.strftime.ret=size_t
func.strlcpy.arg.0=size_t,_n
func.strlcpy.args=0x3
func.strlcpy.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.strmode.arg.0=char *,bp
func.strmode.args=0x2
func.strmode.ret=void
func.strncasecmp.arg.0=size_t,n
func.strncasecmp.args=0x3
func.strncasecmp.ret=int
func.strncat.arg.0=size_t,n
func.strncat.args=0x3
func.strncat.ret=char *
func.strncmp.arg.0=size_t,n
func.strncmp.args=0x3
func.strncmp.ret=int
func.strncpy.arg.0=size_t,_n
func.strncpy.args=0x3
func.strncpy.ret=char *
func.strndup.arg.0=int,n
func.strndup.args=0x2
func.strndup.ret=char *
func.strpbrk.arg.0=const char *,s2
func.strpbrk.args=0x2
func.strpbrk.ret=char *
func.strrchr.arg.0=int,c
func.strrchr.args=0x2
func.strrchr.ret=char *
func.strspn.arg.0=const char *,s2
func.strspn.args=0x2
func.strspn.ret=size_t
func.strstr.arg.0=const char *,s2
func.strstr.args=0x2
func.strstr.ret=char *
func.strtod.arg.0=char **,endptr
func.strtod.args=0x2
func.strtod.ret=double
func.strtof.arg.0=char **,endptr
func.strtof.args=0x2
func.strtof.ret=float
func.strtoimax.arg.0=int,base
func.strtoimax.args=0x3
func.strtoimax.ret=intmax_t
func.strtok.arg.0=const char *,s2
func.strtok.args=0x2
func.strtok.ret=char *
func.strtol.arg.0=int,base
func.strtol.args=0x3
func.strtol.ret=long
func.strtold.arg.0=char **,endptr
func.strtold.args=0x2
func.strtold.ret=long double
func.strtoll.arg.0=int,base
func.strtoll.args=0x3
func.strtoll.ret=long long
func.strtoul.arg.0=int,base
func.strtoul.args=0x3
func.strtoul.ret=long
func.strtoull.arg.0=int,base
func.strtoull.args=0x3
func.strtoull.ret=long long
func.strtoumax.arg.0=int,base
func.strtoumax.args=0x3
func.strtoumax.ret=uintmax_t
func.strxfrm.arg.0=size_t,n
func.strxfrm.args=0x3
func.strxfrm.ret=size_t
func.swprintf.arg.0=wchar_t *,format
func.swprintf.args=0x3
func.swprintf.ret=int
func.swscanf.arg.0=wchar_t *,format
func.swscanf.args=0x2
func.swscanf.ret=int
func.symlink.arg.0=const char *,path2
func.symlink.args=0x2
func.symlink.ret=int
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.tgoto.arg.0=int,row
func.tgoto.args=0x3
func.tgoto.ret=char *
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towctrans.arg.0=wctrans_t,desc
func.towctrans.args=0x2
func.towctrans.ret=wint_t
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.ungetc.arg.0=FILE *,stream
func.ungetc.args=0x2
func.ungetc.ret=int
func.ungetwc.arg.0=FILE *,stream
func.ungetwc.args=0x2
func.ungetwc.ret=wint_t
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.user_from_uid.arg.0=int,nouser
func.user_from_uid.args=0x2
func.user_from_uid.ret=char *
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.vfprintf.arg.0=va_list,ap
func.vfprintf.args=0x3
func.vfprintf.ret=int
func.vfscanf.arg.0=va_list,ap
func.vfscanf.args=0x3
func.vfscanf.ret=int
func.vfwprintf.arg.0=va_list,arg
func.vfwprintf.args=0x3
func.vfwprintf.ret=int
func.vfwscanf.arg.0=va_list,arg
func.vfwscanf.args=0x3
func.vfwscanf.ret=int
func.vprintf.arg.0=va_list,ap
func.vprintf.args=0x2
func.vprintf.ret=int
func.vscanf.arg.0=va_list,ap
func.vscanf.args=0x2
func.vscanf.ret=int
func.vsnprintf.arg.0=va_list,arg
func.vsnprintf.args=0x4
func.vsnprintf.ret=int
func.vsprintf.arg.0=va_list,arg
func.vsprintf.args=0x3
func.vsprintf.ret=int
func.vsscanf.arg.0=va_list,arg
func.vsscanf.args=0x3
func.vsscanf.ret=int
func.vswprintf.arg.0=va_list,arg
func.vswprintf.args=0x4
func.vswprintf.ret=int
func.vswscanf.arg.0=va_list,arg
func.vswscanf.args=0x3
func.vswscanf.ret=int
func.vwprintf.arg.0=va_list,arg
func.vwprintf.args=0x2
func.vwprintf.ret=int
func.vwscanf.arg.0=va_list,arg
func.vwscanf.args=0x2
func.vwscanf.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.waitid.arg.0=int,options
func.waitid.args=0x4
func.waitid.ret=int
func.waitpid.arg.0=int,options
func.waitpid.args=0x3
func.waitpid.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnc.arg.0=int,opt
func.warnc.args=0x2
func.warnc.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcrtomb.arg.0=mbstate_t *,ps
func.wcrtomb.args=0x3
func.wcrtomb.ret=size_t
func.wcscat.arg.0=wchar_t *,s2
func.wcscat.args=0x2
func.wcscat.ret=wchar_t *
func.wcschr.arg.0=wchar_t,c
func.wcschr.args=0x2
func.wcschr.ret=wchar_t *
func.wcscmp.arg.0=wchar_t *,s2
func.wcscmp.args=0x2
func.wcscmp.ret=int
func.wcscoll.arg.0=wchar_t *,s2
func.wcscoll.args=0x2
func.wcscoll.ret=int
func.wcscpy.arg.0=wchar_t *,s2
func.wcscpy.args=0x2
func.wcscpy.ret=wchar_t *
func.wcscspn.arg.0=wchar_t *,s2
func.wcscspn.args=0x2
func.wcscspn.ret=size_t
func.wcsftime.arg.0=struct tm *,timeptr
func.wcsftime.args=0x4
func.wcsftime.ret=size_t
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wcsncat.arg.0=size_t,n
func.wcsncat.args=0x3
func.wcsncat.ret=wchar_t *
func.wcsncmp.arg.0=size_t,n
func.wcsncmp.args=0x3
func.wcsncmp.ret=int
func.wcsncpy.arg.0=size_t,n
func.wcsncpy.args=0x3
func.wcsncpy.ret=wchar_t *
func.wcspbrk.arg.0=wchar_t *,s2
func.wcspbrk.args=0x2
func.wcspbrk.ret=wchar_t *
func.wcsrchr.arg.0=wchar_t,c
func.wcsrchr.args=0x2
func.wcsrchr.ret=wchar_t *
func.wcsrtombs.arg.0=mbstate_t *,ps
func.wcsrtombs.args=0x4
func.wcsrtombs.ret=size_t
func.wcsspn.arg.0=wchar_t *,s2
func.wcsspn.args=0x2
func.wcsspn.ret=size_t
func.wcsstr.arg.0=wchar_t *,s2
func.wcsstr.args=0x2
func.wcsstr.ret=wchar_t *
func.wcstod.arg.0=wchar_t **,endptr
func.wcstod.args=0x2
func.wcstod.ret=double
func.wcstof.arg.0=wchar_t **,endptr
func.wcstof.args=0x2
func.wcstof.ret=float
func.wcstoimax.arg.0=int,base
func.wcstoimax.args=0x3
func.wcstoimax.ret=intmax_t
func.wcstok.arg.0=wchar_t **,ptr
func.wcstok.args=0x3
func.wcstok.ret=wchar_t *
func.wcstol.arg.0=int,base
func.wcstol.args=0x3
func.wcstol.ret=long
func.wcstold.arg.0=wchar_t **,endptr
func.wcstold.args=0x2
func.wcstold.ret=long double
func.wcstoll.arg.0=int,base
func.wcstoll.args=0x3
func.wcstoll.ret=long long
func.wcstombs.arg.0=size_t,n
func.wcstombs.args=0x3
func.wcstombs.ret=size_t
func.wcstoul.arg.0=int,base
func.wcstoul.args=0x3
func.wcstoul.ret=long
func.wcstoull.arg.0=int,base
func.wcstoull.args=0x3
func.wcstoull.ret=long long
func.wcstoumax.arg.0=int,base
func.wcstoumax.args=0x3
func.wcstoumax.ret=uintmax_t
func.wcsxfrm.arg.0=size_t,n
func.wcsxfrm.args=0x3
func.wcsxfrm.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctomb.arg.0=wchar_t,wchar
func.wctomb.args=0x2
func.wctomb.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wmemchr.arg.0=size_t,n
func.wmemchr.args=0x3
func.wmemchr.ret=wchar_t *
func.wmemcmp.arg.0=size_t,n
func.wmemcmp.args=0x3
func.wmemcmp.ret=int
func.wmemcpy.arg.0=size_t,n
func.wmemcpy.args=0x3
func.wmemcpy.ret=wchar_t *
func.wmemmove.arg.0=size_t,n
func.wmemmove.args=0x3
func.wmemmove.ret=wchar_t *
func.wmemset.arg.0=size_t,n
func.wmemset.args=0x3
func.wmemset.ret=wchar_t *
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.write.arg.0=size_t,nbytes
func.write.args=0x3
func.write.ret=ssize_t
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
fwide=func
fwprintf=func
fwrite=func
fwscanf=func
getc=func
getchar=func
getenv=func
geteuid=func
getopt=func
getpid=func
getprogname=func
gets=func
getsockname=func
getsockopt=func
getuid=func
getwc=func
getwchar=func
gmtime=func
group_from_gid=func
humanize_number=func
hypot=func
hypotf=func
hypotl=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
imaxdiv=func
inet_aton=func
inet_ntoa=func
initstate=func
ioctl=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isgreater=func
isgreaterequal=func
isinf=func
isless=func
islessequal=func
islessgreater=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isunordered=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswctype=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
kill=func
labs=func
ldexp=func
ldexpf=func
ldexpl=func
ldiv=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
lldiv=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
longjmp=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
lstat=func
main=func
malloc=func
maskrune=func
mblen=func
mbrlen=func
mbrtowc=func
mbsinit=func
mbsrtowcs=func
mbstowcs=func
mbtowc=func
memchr=func
memcmp=func
memcpy=func
memmem=func
memmove=func
memset=func
mkstemp=func
mktemp=func
mktime=func
mmap=func
modf=func
modff=func
modfl=func
munmap=func
nan=func
nanf=func
nanl=func
nanosleep=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nextafter=func
nextafterf=func
nextafterl=func
nexttoward=func
nexttowardf=func
nexttowardl=func
nl_langinfo=func
nl_langinfo_l=func
objc_enumerationMutation=func
objc_msgSend=func
objc_msgSendSuper2=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
objc_storeStrong=func
open=func
openat=func
pclose=func
perror=func
popen=func
pow=func
powf=func
powl=func
prctl=func
printf=func
ptrace=func
putc=func
putchar=func
puts=func
pututxline=func
putwc=func
putwchar=func
qsort=func
quick_exit=func
raise=func
rand=func
random=func
read=func
realloc=func
reallocf=func
recv=func
remainder=func
remainderf=func
remainderl=func
remove=func
remquo=func
remquof=func
remquol=func
rename=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scalbln=func
scalblnf=func
scalblnl=func
scalbn=func
scalbnf=func
scalbnl=func
scanf=func
select=func
send=func
setbuf=func
setenv=func
setjmp=func
setlocale=func
setsockopt=func
setstate=func
setvbuf=func
sigaction=func
signal=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
snprintf=func
snprintf_chk=func
socket=func
sprintf=func
sprintf_chk=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
sscanf=func
strcasecmp=func
strcat=func
strchr=func
strcmp=func
strcoll=func
strcpy=func
strcpy_chk=func
strcspn=func
strdup=func
strerror=func
strftime=func
strlcpy=func
strlen=func
strmode=func
strncasecmp=func
strncat=func
strncmp=func
strncpy=func
strndup=func
strpbrk=func
strrchr=func
strspn=func
strstr=func
strtod=func
strtof=func
strtoimax=func
strtok=func
strtol=func
strtold=func
strtoll=func
strtoul=func
strtoull=func
strtoumax=func
strxfrm=func
swprintf=func
swscanf=func
symlink=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
tgoto=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towctrans=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
ungetc=func
ungetwc=func
unlink=func
user_from_uid=func
usleep=func
vfprintf=func
vfscanf=func
vfwprintf=func
vfwscanf=func
vprintf=func
vscanf=func
vsnprintf=func
vsprintf=func
vsscanf=func
vswprintf=func
vswscanf=func
vwprintf=func
vwscanf=func
wait=func
waitid=func
waitpid=func
warn=func
warnc=func
warnx=func
wcrtomb=func
wcscat=func
wcschr=func
wcscmp=func
wcscoll=func
wcscpy=func
wcscspn=func
wcsftime=func
wcslen=func
wcsncat=func
wcsncmp=func
wcsncpy=func
wcspbrk=func
wcsrchr=func
wcsrtombs=func
wcsspn=func
wcsstr=func
wcstod=func
wcstof=func
wcstoimax=func
wcstok=func
wcstol=func
wcstold=func
wcstoll=func
wcstombs=func
wcstoul=func
wcstoull=func
wcstoumax=func
wcsxfrm=func
wctob=func
wctomb=func
wctrans=func
wctype=func
wmemchr=func
wmemcmp=func
wmemcpy=func
wmemmove=func
wmemset=func
wprintf=func
write=func
wscanf=func
xmalloc=func

/core/analysis/cc
borland=cc
cc.borland.arg0=eax
cc.borland.arg1=edx
cc.borland.arg2=ecx
cc.borland.argn=stack_rev
cc.cdecl-fastcall-ms.argn=stack
cc.cdecl-fastcall-ms.ret=eax
cc.cdecl-thiscall-ms.arg0=ecx
cc.cdecl.argn=stack
cc.cdecl.ret=eax
cc.fastcall.arg0=ecx
cc.fastcall.arg1=edx
cc.fastcall.argn=stack
cc.fastcall.ret=eax
cc.optlink.arg0=eax
cc.optlink.arg1=edx
cc.optlink.arg2=ecx
cc.optlink.argn=stack
cc.optlink.ret=eax
cc.pascal.argn=stack_rev
cc.reg.arg0=eax
cc.reg.arg1=ebx
cc.reg.arg2=ecx
cc.reg.arg3=edx
cc.reg.ret=eax
cc.stdcall.argn=stack
cc.stdcall.ret=eax
cc.watcom.arg0=eax
cc.watcom.arg1=edx
cc.watcom.arg2=ebx
cc.watcom.arg3=ecx
cc.watcom.argn=stack
cdecl=cc
cdecl-thiscall-ms=cc
default.cc=cdecl
fastcall=cc
optlink=cc
pascal=cc
reg=cc
stdcall=cc
watcom=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x8048408={"name":"sym._init","bits":32,"type":4,"cc":"cdecl","stack":-8,"maxstack":12,"ninstr":14,"bp_frame":true,"diff":{},"bbs":[134513672,134513698,134513703]}
0x8048450={"name":"sym.imp.__stack_chk_fail","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513744]}
0x8048460={"name":"sym.imp.fwrite","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513760]}
0x8048470={"name":"sym.imp.getenv","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513776]}
0x8048480={"name":"sym.imp.puts","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513792]}
0x8048490={"name":"loc.imp.__gmon_start","bits":32,"type":1,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134513808]}
0x80484a0={"name":"sym.imp.open","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513824]}
0x80484b0={"name":"sym.imp.__libc_start_main","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134513840]}
0x80484c0={"name":"sym.imp.putchar","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513856]}
0x80484d0={"name":"sym.imp.fputc","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513872]}
0x80484e0={"name":"sym.imp.ptrace","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134513888]}
0x80484f0={"name":"entry0","bits":32,"type":1,"cc":"cdecl","stack":28,"maxstack":28,"ninstr":13,"diff":{},"bbs":[134513904]}
0x8048520={"name":"sym.__do_global_dtors_aux","bits":32,"type":4,"cc":"cdecl","stack":12,"maxstack":12,"ninstr":25,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134513952,134513968,134513994,134514000,134514024,134514031]}
0x8048580={"name":"sym.frame_dummy","bits":32,"type":4,"cc":"cdecl","stack":20,"maxstack":28,"ninstr":13,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134514048,134514063,134514072,134514081]}
0x80485a4={"name":"sym.syscall_open","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":28,"ninstr":19,"bp_frame":true,"bp_off":4,"pure":true,"diff":{},"bbs":[134514084],"vars":[{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":8,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":35,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":38,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"arg_8h","type":"int32_t","kind":"b","delta":4,"arg":true,"accs":[{"off":20,"type":"r","sp":8,"reg":"ebp"}]},{"name":"arg_ch","type":"pid_t","kind":"b","delta":8,"arg":true,"accs":[{"off":23,"type":"r","sp":12,"reg":"ebp"}]}]}
0x80485d4={"name":"sym.syscall_gets","bits":32,"type":4,"cc":"cdecl","stack":28,"maxstack":28,"ninstr":44,"bp_frame":true,"bp_off":4,"pure":true,"diff":{},"bbs":[134514132,134514149,134514186,134514201,134514207,134514211,134514222,134514224,134514225],"vars":[{"name":"count","type":"unsigned long","kind":"b","delta":-20,"accs":[{"off":8,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":17,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":54,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":69,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":75,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":85,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":93,"type":"r","sp":18446744073709551600,"reg":"ebp"},{"off":104,"type":"r","sp":18446744073709551600,"reg":"ebp"}]},{"name":"buf_size","type":"size_t","kind":"b","delta":8,"arg":true,"accs":[{"off":79,"type":"r","sp":12,"reg":"ebp"}]},{"name":"buf","type":"char *","kind":"b","delta":4,"arg":true,"accs":[{"off":20,"type":"r","sp":8,"reg":"ebp"},{"off":57,"type":"r","sp":8,"reg":"ebp"},{"off":96,"type":"r","sp":8,"reg":"ebp"}]},{"name":"fd","type":"int","kind":"b","delta":12,"arg":true,"accs":[{"off":31,"type":"r","sp":16,"reg":"ebp"}]},{"name":"var_ch","type":"unsigned long","kind":"b","delta":-16,"accs":[{"off":45,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":48,"type":"r","sp":18446744073709551604,"reg":"ebp"}]}]}
0x8048646={"name":"sym.afterSubstr","bits":32,"type":4,"cc":"cdecl","stack":20,"maxstack":20,"ninstr":44,"bp_frame":true,"bp_off":4,"pure":true,"diff":{},"bbs":[134514246,134514267,134514283,134514305,134514312,134514316,134514322,134514335,134514341,134514345,134514355,134514357,134514358,134514364,134514371,134514377],"vars":[{"name":"var_8h","type":"unsigned long","kind":"b","delta":-12,"accs":[{"off":6,"type":"w","sp":18446744073709551608,"reg":"ebp"},{"off":21,"type":"w","sp":18446744073709551608,"reg":"ebp"},{"off":59,"type":"w","sp":18446744073709551608,"reg":"ebp"},{"off":70,"type":"r","sp":18446744073709551608,"reg":"ebp"},{"off":89,"type":"r","sp":18446744073709551608,"reg":"ebp"},{"off":112,"type":"r","sp":18446744073709551608,"reg":"ebp"}]},{"name":"arg_8h","type":"int32_t","kind":"b","delta":4,"arg":true,"accs":[{"off":13,"type":"r","sp":8,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"b","delta":-8,"accs":[{"off":16,"type":"w","sp":18446744073709551612,"reg":"ebp"},{"off":49,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":95,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":99,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":128,"type":"r","sp":18446744073709551612,"reg":"ebp"}]},{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":28,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":37,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":46,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":66,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":76,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":125,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"arg_ch","type":"const char *","kind":"b","delta":8,"arg":true,"accs":[{"off":40,"type":"r","sp":12,"reg":"ebp"},{"off":79,"type":"r","sp":12,"reg":"ebp"}]}]}
0x80486cb={"name":"sym.isLib","bits":32,"type":4,"cc":"cdecl","stack":28,"maxstack":28,"ninstr":80,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134514379,134514412,134514422,134514432,134514442,134514455,134514466,134514476,134514486,134514492,134514502,134514509,134514522,134514533,134514543,134514553,134514559,134514566,134514575,134514602,134514609,134514613,134514631,134514636],"vars":[{"name":"arg_ch","type":"const char *","kind":"b","delta":8,"arg":true,"accs":[{"off":6,"type":"r","sp":12,"reg":"ebp"}]},{"name":"var_4h","type":"int32_t","kind":"s","delta":-24,"accs":[{"off":9,"type":"w","sp":4,"reg":"esp"}]},{"name":"arg_8h","type":"int32_t","kind":"b","delta":4,"arg":true,"accs":[{"off":13,"type":"r","sp":8,"reg":"ebp"}]},{"name":"var_bp_4h","type":"unsigned long","kind":"b","delta":-8,"accs":[{"off":24,"type":"w","sp":18446744073709551612,"reg":"ebp"},{"off":27,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":43,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":70,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":83,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":87,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":97,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":113,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":137,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":150,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":154,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":164,"type":"r","sp":18446744073709551612,"reg":"ebp"},{"off":213,"type":"r","sp":18446744073709551612,"reg":"ebp"}]},{"name":"var_8h","type":"unsigned long","kind":"b","delta":-12,"accs":[{"off":63,"type":"w","sp":18446744073709551608,"reg":"ebp"},{"off":76,"type":"w","sp":18446744073709551608,"reg":"ebp"},{"off":107,"type":"r","sp":18446744073709551608,"reg":"ebp"},{"off":130,"type":"w","sp":18446744073709551608,"reg":"ebp"},{"off":143,"type":"w","sp":18446744073709551608,"reg":"ebp"},{"off":174,"type":"r","sp":18446744073709551608,"reg":"ebp"}]},{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":187,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":202,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":210,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":230,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":240,"type":"r","sp":18446744073709551604,"reg":"ebp"}]}]}
0x80487ce={"name":"main","bits":32,"type":4,"cc":"cdecl","stack":316,"maxstack":316,"ninstr":162,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134514638,134514730,134514752,134514768,134514818,134514842,134514892,134514927,134514977,134515001,134515014,134515025,134515053,134515059,134515061,134515094,134515146,134515172,134515214,134515238,134515280,134515281,134515317,134515319,134515335,134515340],"vars":[{"name":"argv","type":"char **","kind":"b","delta":8,"arg":true,"accs":[{"off":14,"type":"r","sp":12,"reg":"ebp"}]},{"name":"var_1ch","type":"int32_t","kind":"s","delta":-288,"accs":[{"off":17,"type":"w","sp":28,"reg":"esp"},{"off":423,"type":"r","sp":28,"reg":"esp"},{"off":465,"type":"r","sp":28,"reg":"esp"}]},{"name":"canary","type":"int32_t","kind":"s","delta":-16,"accs":[{"off":27,"type":"w","sp":300,"reg":"esp"},{"off":681,"type":"r","sp":300,"reg":"esp"}]},{"name":"var_24h","type":"unsigned long","kind":"s","delta":-280,"accs":[{"off":36,"type":"w","sp":36,"reg":"esp"},{"off":363,"type":"w","sp":36,"reg":"esp"},{"off":376,"type":"r","sp":36,"reg":"esp"}]},{"name":"c","type":"int","kind":"s","delta":-284,"accs":[{"off":44,"type":"w","sp":32,"reg":"esp"},{"off":432,"type":"r","sp":32,"reg":"esp"},{"off":444,"type":"r","sp":32,"reg":"esp"},{"off":456,"type":"r","sp":32,"reg":"esp"},{"off":461,"type":"r","sp":32,"reg":"esp"}]},{"name":"stream","type":"FILE *","kind":"s","delta":-304,"accs":[{"off":52,"type":"w","sp":12,"reg":"esp"},{"off":142,"type":"w","sp":12,"reg":"esp"},{"off":216,"type":"w","sp":12,"reg":"esp"},{"off":301,"type":"w","sp":12,"reg":"esp"},{"off":546,"type":"w","sp":12,"reg":"esp"},{"off":612,"type":"w","sp":12,"reg":"esp"}]},{"name":"nitems","type":"size_t","kind":"s","delta":-308,"accs":[{"off":60,"type":"w","sp":8,"reg":"esp"},{"off":146,"type":"w","sp":8,"reg":"esp"},{"off":220,"type":"w","sp":8,"reg":"esp"},{"off":305,"type":"w","sp":8,"reg":"esp"},{"off":550,"type":"w","sp":8,"reg":"esp"},{"off":616,"type":"w","sp":8,"reg":"esp"},{"off":647,"type":"w","sp":8,"reg":"esp"}]},{"name":"oflag","type":"const char *","kind":"s","delta":-312,"accs":[{"off":68,"type":"w","sp":4,"reg":"esp"},{"off":154,"type":"w","sp":4,"reg":"esp"},{"off":180,"type":"w","sp":4,"reg":"esp"},{"off":228,"type":"w","sp":4,"reg":"esp"},{"off":254,"type":"w","sp":4,"reg":"esp"},{"off":313,"type":"w","sp":4,"reg":"esp"},{"off":339,"type":"w","sp":4,"reg":"esp"},{"off":387,"type":"w","sp":4,"reg":"esp"},{"off":513,"type":"w","sp":4,"reg":"esp"},{"off":558,"type":"w","sp":4,"reg":"esp"},{"off":576,"type":"w","sp":4,"reg":"esp"},{"off":624,"type":"w","sp":4,"reg":"esp"},{"off":651,"type":"w","sp":4,"reg":"esp"}]},{"name":"var_28h","type":"unsigned long","kind":"s","delta":-276,"accs":[{"off":274,"type":"w","sp":40,"reg":"esp"},{"off":278,"type":"r","sp":40,"reg":"esp"},{"off":643,"type":"r","sp":40,"reg":"esp"}]},{"name":"var_2ch","type":"int32_t","kind":"s","delta":-272,"accs":[{"off":347,"type":"r","sp":44,"reg":"esp"},{"off":395,"type":"r","sp":44,"reg":"esp"},{"off":584,"type":"r","sp":44,"reg":"esp"},{"off":659,"type":"r","sp":44,"reg":"esp"}]},{"name":"argc","type":"int","kind":"b","delta":4,"arg":true,"accs":[{"off":415,"type":"r","sp":8,"reg":"ebp"}]},{"name":"var_18h","type":"int32_t","kind":"s","delta":-292,"accs":[{"off":474,"type":"w","sp":24,"reg":"esp"},{"off":489,"type":"r","sp":24,"reg":"esp"}]},{"name":"var_bp_8h","type":"int32_t","kind":"b","delta":-12,"accs":[{"off":702,"type":"r","sp":18446744073709551608,"reg":"ebp"}]}]}
0x8048aa0={"name":"sym.__libc_csu_init","bits":32,"type":4,"cc":"cdecl","stack":44,"maxstack":44,"ninstr":32,"bp_frame":true,"bp_off":44,"diff":{},"bbs":[134515360,134515408,134515416,134515449],"vars":[{"name":"arg_30h","type":"int32_t","kind":"s","delta":4,"arg":true,"accs":[{"off":18,"type":"r","sp":48,"reg":"esp"}]},{"name":"arg_38h","type":"int32_t","kind":"s","delta":12,"arg":true,"accs":[{"off":56,"type":"r","sp":56,"reg":"esp"}]},{"name":"var_8h","type":"int32_t","kind":"s","delta":-36,"accs":[{"off":63,"type":"w","sp":8,"reg":"esp"}]},{"name":"arg_34h","type":"int32_t","kind":"s","delta":8,"arg":true,"accs":[{"off":67,"type":"r","sp":52,"reg":"esp"}]},{"name":"var_4h","type":"int32_t","kind":"s","delta":-40,"accs":[{"off":71,"type":"w","sp":4,"reg":"esp"}]}]}
0x8048b10={"name":"sym.__libc_csu_fini","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515472]}
0x8048b12={"name":"sym.__i686.get_pc_thunk.bx","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":2,"bp_frame":true,"diff":{},"bbs":[134515474]}
0x8048b20={"name":"sym.__do_global_ctors_aux","bits":32,"type":4,"cc":"cdecl","stack":12,"maxstack":12,"ninstr":18,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134515488,134515505,134515512,134515524]}
0x8048b4c={"name":"sym._fini","bits":32,"type":4,"cc":"cdecl","stack":-8,"maxstack":12,"ninstr":9,"bp_frame":true,"diff":{},"bbs":[134515532]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x0=[{"type":"C","str":"[29] ---- section size 732 named .strtab"}]
0x8048154=[{"type":"C","str":"[01] -r-- section size 19 named .interp"}]
0x8048168=[{"type":"C","str":"[02] -r-- section size 32 named .note.ABI-tag"}]
0x8048188=[{"type":"C","str":"[03] -r-- section size 36 named .note.gnu.build-id"}]
0x80481ac=[{"type":"C","str":"[04] -r-- section size 44 named .gnu.hash"}]
0x80481d8=[{"type":"C","str":"[05] -r-- section size 224 named .dynsym"}]
0x80482b8=[{"type":"C","str":"[06] -r-- section size 155 named .dynstr"}]
0x8048354=[{"type":"C","str":"[07] -r-- section size 28 named .gnu.version"}]
0x8048370=[{"type":"C","str":"[08] -r-- section size 48 named .gnu.version_r"}]
0x80483a0=[{"type":"C","str":"[09] -r-- section size 24 named .rel.dyn"}]
0x80483b8=[{"type":"C","str":"[10] -r-- section size 80 named .rel.plt"}]
0x8048408=[{"type":"C","str":"[11] -r-x section size 46 named .init"}]
0x8048440=[{"type":"C","str":"[12] -r-x section size 176 named .plt"}]
0x80484f0=[{"type":"C","str":"[13] -r-x section size 1628 named .text"}]
0x80484f9=[{"type":"t","str":"void *stack_end"}]
0x80484fa=[{"type":"t","str":"void *rtld_fini"}]
0x80484fb=[{"type":"t","str":"void *fini"}]
0x8048500=[{"type":"t","str":"void *init"}]
0x8048505=[{"type":"t","str":"char **ubp_av"}]
0x8048506=[{"type":"t","str":"int argc"}]
0x8048507=[{"type":"t","str":"void *main"}]
0x80486d4=[{"type":"t","str":"int32_t arg_ch"}]
0x80486db=[{"type":"t","str":"int32_t arg_8h"}]
0x8048802=[{"type":"t","str":"void *data"}]
0x804880a=[{"type":"t","str":"void *addr"}]
0x8048812=[{"type":"t","str":"pid_t pid"}]
0x804881a=[{"type":"t","str":"void *ptrace_request"}]
0x804882a=[{"type":"t","str":"const char *s"}]
0x8048840=[{"type":"t","str":"const char *name"}]
0x804885c=[{"type":"t","str":"FILE *stream"}]
0x8048860=[{"type":"t","str":"size_t nitems"}]
0x8048868=[{"type":"t","str":"size_t size"}]
0x8048870=[{"type":"t","str":"const void *ptr"}]
0x8048882=[{"type":"t","str":"int oflag"}]
0x804888a=[{"type":"t","str":"const char *path"}]
0x80488a6=[{"type":"t","str":"FILE *stream"}]
0x80488aa=[{"type":"t","str":"size_t nitems"}]
0x80488b2=[{"type":"t","str":"size_t size"}]
0x80488ba=[{"type":"t","str":"const void *ptr"}]
0x80488cc=[{"type":"t","str":"int32_t arg_ch"}]
0x80488d4=[{"type":"t","str":"int32_t arg_8h"}]
0x80488fb=[{"type":"t","str":"FILE *stream"}]
0x80488ff=[{"type":"t","str":"size_t nitems"}]
0x8048907=[{"type":"t","str":"size_t size"}]
0x804890f=[{"type":"t","str":"const void *ptr"}]
0x8048921=[{"type":"t","str":"int32_t arg_8h"}]
0x804892d=[{"type":"t","str":"int32_t arg_ch"}]
0x8048951=[{"type":"t","str":"int32_t arg_8h"}]
0x804895d=[{"type":"t","str":"const char *arg_ch"}]
0x804898e=[{"type":"t","str":"int c"}]
0x80489cf=[{"type":"t","str":"FILE *stream"}]
0x80489d3=[{"type":"t","str":"int c"}]
0x80489f0=[{"type":"t","str":"FILE *stream"}]
0x80489f4=[{"type":"t","str":"size_t nitems"}]
0x80489fc=[{"type":"t","str":"size_t size"}]
0x8048a04=[{"type":"t","str":"const void *ptr"}]
0x8048a0e=[{"type":"t","str":"int32_t arg_ch"}]
0x8048a1a=[{"type":"t","str":"int32_t arg_8h"}]
0x8048a32=[{"type":"t","str":"FILE *stream"}]
0x8048a36=[{"type":"t","str":"size_t nitems"}]
0x8048a3e=[{"type":"t","str":"size_t size"}]
0x8048a46=[{"type":"t","str":"const void *ptr"}]
0x8048a55=[{"type":"t","str":"int32_t arg_10h"}]
0x8048a59=[{"type":"t","str":"int32_t arg_8h"}]
0x8048a65=[{"type":"t","str":"int32_t arg_ch"}]
0x8048b4c=[{"type":"C","str":"[14] -r-x section size 26 named .fini"}]
0x8048b68=[{"type":"C","str":"[15] -r-- section size 310 named .rodata"}]
0x8048b70=[{"size":28,"type":"s","str":"You should not reverse this"}]
0x8048b8c=[{"size":11,"type":"s","str":"LD_PRELOAD"}]
0x8048b98=[{"size":38,"type":"s","str":"Injection Linked lib detected exit..\\\\n"}]
0x8048bbe=[{"size":19,"type":"s","str":"/etc/ld.so.preload"}]
0x8048bd1=[{"size":16,"type":"s","str":"/proc/self/maps"}]
0x8048be4=[{"size":71,"type":"s","str":"/proc/self/maps is unaccessible, probably a LD_PRELOAD attempt exit..\\\\n"}]
0x8048c2b=[{"size":5,"type":"s","str":"libc"}]
0x8048c34=[{"size":35,"type":"s","str":"You need to provied only one arg.\\\\n"}]
0x8048c57=[{"size":17,"type":"s","str":"00000000 00:00 0"}]
0x8048c68=[{"size":49,"type":"s","str":"LD_PRELOAD detected through memory maps exit ..\\\\n"}]
0x8048c99=[{"size":5,"type":"s","str":".so\\\\n"}]
0x8048ca0=[{"type":"C","str":"[16] -r-- section size 84 named .eh_frame_hdr"}]
0x8048cf4=[{"type":"C","str":"[17] -r-- section size 352 named .eh_frame"}]
0x8049f14=[{"type":"C","str":"[18] -rw- section size 8 named .ctors"}]
0x8049f1c=[{"type":"C","str":"[19] -rw- section size 8 named .dtors"}]
0x8049f24=[{"type":"C","str":"[20] -rw- section size 4 named .jcr"}]
0x8049f28=[{"size":4,"type":"d","str":"4[50]"},{"type":"C","str":"[21] -rw- section size 200 named .dynamic"}]
0x8049f2c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f30=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f34=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f38=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f3c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f40=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f44=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f48=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f4c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f50=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f54=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f58=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f5c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f60=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f64=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f68=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f6c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f70=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f74=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f78=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f7c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f80=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f84=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f88=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f8c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f90=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f94=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f98=[{"size":4,"type":"d","str":"4[50]"}]
0x8049f9c=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fa0=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fa4=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fa8=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fac=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fb0=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fb4=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fb8=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fbc=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fc0=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fc4=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fc8=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fcc=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fd0=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fd4=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fd8=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fdc=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fe0=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fe4=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fe8=[{"size":4,"type":"d","str":"4[50]"}]
0x8049fec=[{"size":4,"type":"d","str":"4[50]"}]
0x8049ff0=[{"size":4,"type":"d"},{"type":"C","str":"[22] -rw- section size 4 named .got"}]
0x8049ff4=[{"type":"C","str":"[23] -rw- section size 52 named .got.plt"}]
0x804a000=[{"size":4,"type":"d"}]
0x804a004=[{"size":4,"type":"d"}]
0x804a008=[{"size":4,"type":"d"}]
0x804a00c=[{"size":4,"type":"d"}]
0x804a010=[{"size":4,"type":"d"}]
0x804a014=[{"size":4,"type":"d"}]
0x804a018=[{"size":4,"type":"d"}]
0x804a01c=[{"size":4,"type":"d"}]
0x804a020=[{"size":4,"type":"d"}]
0x804a024=[{"size":4,"type":"d"}]
0x804a028=[{"type":"C","str":"[24] -rw- section size 12 named .data"}]
0x804a040=[{"type":"C","str":"[25] -rw- section size 44 named .bss"},{"size":4,"type":"d"}]
0x804a060=[{"size":4,"type":"d"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn

/core/analysis/pins

/core/analysis/typelinks

/core/analysis/types
FILE=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
_fd_set=struct
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
sigaction=struct
siginfo_t=typedef
sigset_t=typedef
sigval=union
size_t=type
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=32
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=d
type.gid_t.size=32
type.gid_t.typeclass=Integral
type.id_t=d
type.id_t.size=32
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=d
type.intptr_t.size=32
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=d
type.pid_t.size=32
type.pid_t.typeclass=Integral
type.ptrdiff_t=d
type.ptrdiff_t.size=32
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short.size=16
type.short.typeclass=Signed Integral
type.size_t=d
type.size_t.size=32
type.size_t.typeclass=Unsigned Integral
type.ssize_t=d
type.ssize_t.size=32
type.ssize_t.typeclass=Signed Integral
type.uid_t=d
type.uid_t.size=32
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=d
type.uintptr_t.size=32
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=d
type.unknown_t.size=32
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=32
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
typedef.FILE=void
typedef.clock_t=void
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=__idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x80480dd=[{"to":134513000,"type":"d"}]
0x804840c=[{"to":134513681,"type":"C"}]
0x8048422=[{"to":134513808,"type":"C"}]
0x8048427=[{"to":134514048,"type":"C"}]
0x804842c=[{"to":134515488,"type":"C"}]
0x8048440=[{"to":134520824,"type":"d"}]
0x8048446=[{"to":134520828,"type":"c"}]
0x8048450=[{"to":134520832,"type":"c"}]
0x804845b=[{"to":134513728,"type":"c"}]
0x8048460=[{"to":134520836,"type":"c"}]
0x804846b=[{"to":134513728,"type":"c"}]
0x8048470=[{"to":134520840,"type":"c"}]
0x804847b=[{"to":134513728,"type":"c"}]
0x8048480=[{"to":134520844,"type":"c"}]
0x804848b=[{"to":134513728,"type":"c"}]
0x8048490=[{"to":134520848,"type":"c"}]
0x804849b=[{"to":134513728,"type":"c"}]
0x80484a0=[{"to":134520852,"type":"c"}]
0x80484ab=[{"to":134513728,"type":"c"}]
0x80484b0=[{"to":134520856,"type":"c"}]
0x80484bb=[{"to":134513728,"type":"c"}]
0x80484c0=[{"to":134520860,"type":"c"}]
0x80484cb=[{"to":134513728,"type":"c"}]
0x80484d0=[{"to":134520864,"type":"c"}]
0x80484db=[{"to":134513728,"type":"c"}]
0x80484e0=[{"to":134520868,"type":"c"}]
0x80484eb=[{"to":134513728,"type":"c"}]
0x80484fb=[{"to":134515472,"type":"d"}]
0x8048500=[{"to":134515360,"type":"d"}]
0x8048507=[{"to":134514638,"type":"d"}]
0x804850c=[{"to":134513840,"type":"C"}]
0x8048527=[{"to":134520932,"type":"d"}]
0x8048530=[{"to":134520936,"type":"d"}]
0x8048535=[{"to":134520608,"type":"d"}]
0x804853a=[{"to":134520604,"type":"d"}]
0x8048553=[{"to":134520936,"type":"d"}]
0x8048558=[{"to":134520604,"type":"C"}]
0x804855f=[{"to":134520936,"type":"d"}]
0x8048568=[{"to":134520932,"type":"d"}]
0x8048586=[{"to":134520612,"type":"d"}]
0x8048598=[{"to":134520612,"type":"d"}]
0x80485e3=[{"to":134514211,"type":"c"}]
0x804861d=[{"to":134514225,"type":"c"}]
0x804862e=[{"to":134514225,"type":"c"}]
0x8048659=[{"to":134514345,"type":"c"}]
0x8048669=[{"to":134514316,"type":"c"}]
0x80486b3=[{"to":134514358,"type":"c"}]
0x80486c1=[{"to":134514377,"type":"c"}]
0x80486de=[{"to":134514246,"type":"C"}]
0x80486f1=[{"to":134514636,"type":"c"}]
0x8048705=[{"to":134514636,"type":"c"}]
0x8048715=[{"to":134514466,"type":"c"}]
0x804874b=[{"to":134514636,"type":"c"}]
0x8048758=[{"to":134514533,"type":"c"}]
0x8048784=[{"to":134514636,"type":"c"}]
0x804878d=[{"to":134514613,"type":"c"}]
0x804878f=[{"to":134520880,"type":"d"}]
0x80487af=[{"to":134514636,"type":"c"}]
0x80487b5=[{"to":134520880,"type":"d"}]
0x8048821=[{"to":134513888,"type":"C"}]
0x804882a=[{"to":134515568,"type":"d"}]
0x8048831=[{"to":134513792,"type":"C"}]
0x804883b=[{"to":134515319,"type":"c"}]
0x8048840=[{"to":134515596,"type":"d"}]
0x8048847=[{"to":134513776,"type":"C"}]
0x8048850=[{"to":134520896,"type":"d"}]
0x8048857=[{"to":134515608,"type":"d"}]
0x8048873=[{"to":134513760,"type":"C"}]
0x804887d=[{"to":134515319,"type":"c"}]
0x804888a=[{"to":134515646,"type":"d"}]
0x8048891=[{"to":134513824,"type":"C"}]
0x804889a=[{"to":134520896,"type":"d"}]
0x80488a1=[{"to":134515608,"type":"d"}]
0x80488bd=[{"to":134513760,"type":"C"}]
0x80488c7=[{"to":134515319,"type":"c"}]
0x80488d4=[{"to":134515665,"type":"d"}]
0x80488db=[{"to":134514084,"type":"C"}]
0x80488ef=[{"to":134520896,"type":"d"}]
0x80488f6=[{"to":134515684,"type":"d"}]
0x8048912=[{"to":134513760,"type":"C"}]
0x804891c=[{"to":134515319,"type":"c"}]
0x8048921=[{"to":134515755,"type":"d"}]
0x8048930=[{"to":134514379,"type":"C"}]
0x8048941=[{"to":134515281,"type":"c"}]
0x8048951=[{"to":134515760,"type":"d"}]
0x8048960=[{"to":134514379,"type":"C"}]
0x8048973=[{"to":134515094,"type":"c"}]
0x8048991=[{"to":134513856,"type":"C"}]
0x80489ca=[{"to":134520928,"type":"d"}]
0x80489da=[{"to":134513872,"type":"C"}]
0x80489df=[{"to":134515317,"type":"c"}]
0x80489e4=[{"to":134520896,"type":"d"}]
0x80489eb=[{"to":134515764,"type":"d"}]
0x8048a07=[{"to":134513760,"type":"C"}]
0x8048a0c=[{"to":134515317,"type":"c"}]
0x8048a0e=[{"to":134515799,"type":"d"}]
0x8048a1d=[{"to":134514246,"type":"C"}]
0x8048a26=[{"to":134520896,"type":"d"}]
0x8048a2d=[{"to":134515816,"type":"d"}]
0x8048a49=[{"to":134513760,"type":"C"}]
0x8048a4e=[{"to":134515317,"type":"c"}]
0x8048a68=[{"to":134514132,"type":"C"}]
0x8048a75=[{"to":134515319,"type":"c"}]
0x8048a87=[{"to":134513744,"type":"C"}]
0x8048aa4=[{"to":134515474,"type":"C"}]
0x8048abc=[{"to":134513672,"type":"C"}]
0x8048b01=[{"to":134515472,"type":"c"}]
0x8048b27=[{"to":134520596,"type":"d"}]
0x8048b31=[{"to":134520596,"type":"d"}]
0x8048b50=[{"to":134515541,"type":"C"}]
0x8048b5c=[{"to":134513952,"type":"C"}]

/core/analysis/zigns

/core/analysis/zigns/spaces
name=zs
spacestack=["*"]

/core/analysis/zigns/spaces/spaces

/core/config
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.endsize=true
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vars.stackname=false
analysis.verbose=false
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=32
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=true
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=1
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.arm=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=false
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=1
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
bin.at=false
bin.b64str=false
bin.baddr=0x08048000
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.rawstr=false
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.useldr=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=vi
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.oldshell=false
cfg.oldshell.autocompletion=true
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid76576
cfg.wseek=false
cmd.demangle=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsize=1
dbg.bpsysign=false
dbg.btalgo=fuzzy
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=32
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=true
dbg.hwbp=0
dbg.malloc=glibc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=0
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=1
dbg.verbose=true
diff.bare=false
diff.from=0
diff.levenstein=false
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=/home/yoyo
dir.magic=/tmp/.mount_CutterbphKzu/usr/share/rizin/0.3.4/magic
dir.plugins=/tmp/.mount_CutterbphKzu/usr/share/rizin/plugins
dir.prefix=/tmp/.mount_CutterbphKzu/usr
dir.projects=~/.local/share/rizin/projects
dir.types=/usr/include
dir.zigns=~/.local/share/rizin/zigns
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=0
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=/home/yoyo/42_projects/snow_crash/level09/level09
file.loadalign=0x00000400
file.openmany=1
file.path=/home/yoyo/42_projects/snow_crash/level09/level09
file.type=elf
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.sleighhome=/tmp/.mount_CutterbphKzu/usr/share/rizin/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bubble=false
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=0
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=xdg-open
http.colon=false
http.cors=false
http.dietime=0
http.dirlist=false
http.homeroot=~/.local/share/rizin/www
http.index=index.html
http.log=true
http.maxport=9999
http.maxsize=0
http.port=9090
http.root=/tmp/.mount_CutterbphKzu/usr/share/rizin/0.3.4/www
http.timeout=3
http.upget=false
http.upload=false
http.uproot=/tmp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=0
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=1
jsdec.asm=false
jsdec.blocks=false
jsdec.casts=false
jsdec.debug=false
jsdec.highlight=default
jsdec.paddr=false
jsdec.slow=false
jsdec.xrefs=false
log.colors=false
log.events=false
log.level=4
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=/home/yoyo/.local/share/rizin/pdb
pdb.useragent=Microsoft-Symbol-Server/6.11.0001.402
prj.compress=false
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.fps=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=0
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=true
scr.utf8.curvy=false
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
zign.autoload=false
zign.diff.bthresh=1.0
zign.diff.gthresh=1.0
zign.match.bytes=true
zign.match.graph=true
zign.match.hash=true
zign.match.offset=false
zign.match.refs=true
zign.match.types=false
zign.maxsz=500
zign.mincc=10
zign.minsz=16
zign.prefix=sign
zign.threshold=0.0
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/file
absolute=/home/yoyo/42_projects/snow_crash/level09/level09
raw=/home/yoyo/42_projects/snow_crash/level09/level09
relative=level09

/core/flags
base=0
realnames=1

/core/flags/flags
entry0={"realname":"entry0","demangled":false,"offset":134513904,"size":33,"space":"symbols"}
loc.__bss_start={"realname":"__bss_start","demangled":false,"offset":134520884,"size":0,"space":"symbols"}
loc.__data_start={"realname":"__data_start","demangled":false,"offset":134520872,"size":0,"space":"symbols"}
loc.__init_array_end={"realname":"__init_array_end","demangled":false,"offset":134520596,"size":0,"space":"symbols"}
loc.__init_array_start={"realname":"__init_array_start","demangled":false,"offset":134520596,"size":0,"space":"symbols"}
loc._edata={"realname":"_edata","demangled":false,"offset":134520884,"size":0,"space":"symbols"}
loc._end={"realname":"_end","demangled":false,"offset":134520940,"size":0,"space":"symbols"}
loc.data_start={"realname":"data_start","demangled":false,"offset":134520872,"size":0,"space":"symbols"}
loc.imp.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":134513808,"size":6,"space":"imports"}
main={"realname":"main","demangled":false,"offset":134514638,"size":709,"space":"symbols"}
obj._DYNAMIC={"realname":"_DYNAMIC","demangled":false,"offset":134520616,"size":0,"space":"symbols"}
obj._GLOBAL_OFFSET_TABLE={"realname":"_GLOBAL_OFFSET_TABLE_","demangled":false,"offset":134520820,"size":0,"space":"symbols"}
obj._IO_stdin_used={"realname":"_IO_stdin_used","demangled":false,"offset":134515564,"size":4,"space":"symbols"}
obj.__CTOR_END={"realname":"__CTOR_END__","demangled":false,"offset":134520600,"size":0,"space":"symbols"}
obj.__CTOR_LIST={"realname":"__CTOR_LIST__","demangled":false,"offset":134520596,"size":0,"space":"symbols"}
obj.__DTOR_END={"realname":"__DTOR_END__","demangled":false,"offset":134520608,"size":0,"space":"symbols"}
obj.__DTOR_LIST={"realname":"__DTOR_LIST__","demangled":false,"offset":134520604,"size":0,"space":"symbols"}
obj.__FRAME_END={"realname":"__FRAME_END__","demangled":false,"offset":134516304,"size":0,"space":"symbols"}
obj.__JCR_END={"realname":"__JCR_END__","demangled":false,"offset":134520612,"size":0,"space":"symbols"}
obj.__JCR_LIST={"realname":"__JCR_LIST__","demangled":false,"offset":134520612,"size":0,"space":"symbols"}
obj.__dso_handle={"realname":"__dso_handle","demangled":false,"offset":134520876,"size":0,"space":"symbols"}
obj._fp_hw={"realname":"_fp_hw","demangled":false,"offset":134515560,"size":4,"space":"symbols"}
obj.completed.6159={"realname":"completed.6159","demangled":false,"offset":134520932,"size":1,"space":"symbols"}
obj.dtor_idx.6161={"realname":"dtor_idx.6161","demangled":false,"offset":134520936,"size":4,"space":"symbols"}
obj.end.3170={"realname":"end.3170","demangled":false,"offset":134520880,"size":4,"space":"symbols"}
obj.stderr={"realname":"stderr","demangled":false,"offset":134520896,"size":4,"space":"symbols"}
obj.stderr__GLIBC_2.0={"realname":"stderr@@GLIBC_2.0","demangled":false,"offset":134520896,"size":4,"space":"symbols"}
obj.stdout={"realname":"stdout","demangled":false,"offset":134520928,"size":4,"space":"symbols"}
obj.stdout__GLIBC_2.0={"realname":"stdout@@GLIBC_2.0","demangled":false,"offset":134520928,"size":4,"space":"symbols"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":134520816,"size":4,"space":"relocs"}
reloc.__gmon_start.0={"realname":"__gmon_start__","demangled":false,"offset":134520848,"size":4,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":134520856,"size":4,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":134520832,"size":4,"space":"relocs"}
reloc.fputc={"realname":"fputc","demangled":false,"offset":134520864,"size":4,"space":"relocs"}
reloc.fwrite={"realname":"fwrite","demangled":false,"offset":134520836,"size":4,"space":"relocs"}
reloc.getenv={"realname":"getenv","demangled":false,"offset":134520840,"size":4,"space":"relocs"}
reloc.open={"realname":"open","demangled":false,"offset":134520852,"size":4,"space":"relocs"}
reloc.ptrace={"realname":"ptrace","demangled":false,"offset":134520868,"size":4,"space":"relocs"}
reloc.putchar={"realname":"putchar","demangled":false,"offset":134520860,"size":4,"space":"relocs"}
reloc.puts={"realname":"puts","demangled":false,"offset":134520844,"size":4,"space":"relocs"}
reloc.stderr={"realname":"stderr","demangled":false,"offset":134520896,"size":4,"space":"relocs"}
reloc.stdout={"realname":"stdout","demangled":false,"offset":134520928,"size":4,"space":"relocs"}
section.={"realname":"section.","demangled":false,"offset":0,"size":0,"space":"sections"}
section..bss={"realname":"section..bss","demangled":false,"offset":134520896,"size":44,"space":"sections"}
section..comment={"realname":"section..comment","demangled":false,"offset":0,"size":42,"space":"sections"}
section..ctors={"realname":"section..ctors","demangled":false,"offset":134520596,"size":8,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":134520872,"size":12,"space":"sections"}
section..dtors={"realname":"section..dtors","demangled":false,"offset":134520604,"size":8,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":134520616,"size":200,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":134513336,"size":155,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":134513112,"size":224,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":134515956,"size":352,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":134515872,"size":84,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":134515532,"size":26,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":134513068,"size":44,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":134513492,"size":28,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":134513520,"size":48,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":134520816,"size":4,"space":"sections"}
section..got.plt={"realname":"section..got.plt","demangled":false,"offset":134520820,"size":52,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":134513672,"size":46,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":134512980,"size":19,"space":"sections"}
section..jcr={"realname":"section..jcr","demangled":false,"offset":134520612,"size":4,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":134513000,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":134513032,"size":36,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":134513728,"size":176,"space":"sections"}
section..rel.dyn={"realname":"section..rel.dyn","demangled":false,"offset":134513568,"size":24,"space":"sections"}
section..rel.plt={"realname":"section..rel.plt","demangled":false,"offset":134513592,"size":80,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":134515560,"size":310,"space":"sections"}
section..shstrtab={"realname":"section..shstrtab","demangled":false,"offset":0,"size":252,"space":"sections"}
section..strtab={"realname":"section..strtab","demangled":false,"offset":0,"size":732,"space":"sections"}
section..symtab={"realname":"section..symtab","demangled":false,"offset":0,"size":1264,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":134513904,"size":1628,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":134520616,"size":200,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":134515872,"size":84,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":134520596,"size":236,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":134512980,"size":19,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":134512640,"size":3668,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":134520596,"size":344,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":134513000,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":134512692,"size":288,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":134512640,"size":52,"space":"segments"}
str..so={"realname":"str..so","demangled":false,"offset":134515865,"size":5,"space":"strings"}
str.00000000_00:00_0={"realname":"str.00000000_00:00_0","demangled":false,"offset":134515799,"size":17,"space":"strings"}
str.Injection_Linked_lib_detected_exit..={"realname":"str.Injection_Linked_lib_detected_exit..","demangled":false,"offset":134515608,"size":38,"space":"strings"}
str.LD_PRELOAD={"realname":"str.LD_PRELOAD","demangled":false,"offset":134515596,"size":11,"space":"strings"}
str.LD_PRELOAD_detected_through_memory_maps_exit_..={"realname":"str.LD_PRELOAD_detected_through_memory_maps_exit_..","demangled":false,"offset":134515816,"size":49,"space":"strings"}
str.You_need_to_provied_only_one_arg.={"realname":"str.You_need_to_provied_only_one_arg.","demangled":false,"offset":134515764,"size":35,"space":"strings"}
str.You_should_not_reverse_this={"realname":"str.You_should_not_reverse_this","demangled":false,"offset":134515568,"size":28,"space":"strings"}
str.etc_ld.so.preload={"realname":"str.etc_ld.so.preload","demangled":false,"offset":134515646,"size":19,"space":"strings"}
str.libc={"realname":"str.libc","demangled":false,"offset":134515755,"size":5,"space":"strings"}
str.proc_self_maps={"realname":"str.proc_self_maps","demangled":false,"offset":134515665,"size":16,"space":"strings"}
str.proc_self_maps_is_unaccessible__probably_a_LD_PRELOAD_attempt_exit..={"realname":"str.proc_self_maps_is_unaccessible__probably_a_LD_PRELOAD_attempt_exit..","demangled":false,"offset":134515684,"size":71,"space":"strings"}
sym..bss={"realname":".bss","demangled":false,"offset":134520896,"size":0,"space":"symbols.sections"}
sym..comment={"realname":".comment","demangled":false,"offset":0,"size":0,"space":"symbols.sections"}
sym..ctors={"realname":".ctors","demangled":false,"offset":134520596,"size":0,"space":"symbols.sections"}
sym..data={"realname":".data","demangled":false,"offset":134520872,"size":0,"space":"symbols.sections"}
sym..dtors={"realname":".dtors","demangled":false,"offset":134520604,"size":0,"space":"symbols.sections"}
sym..dynamic={"realname":".dynamic","demangled":false,"offset":134520616,"size":0,"space":"symbols.sections"}
sym..dynstr={"realname":".dynstr","demangled":false,"offset":134513336,"size":0,"space":"symbols.sections"}
sym..dynsym={"realname":".dynsym","demangled":false,"offset":134513112,"size":0,"space":"symbols.sections"}
sym..eh_frame={"realname":".eh_frame","demangled":false,"offset":134515956,"size":0,"space":"symbols.sections"}
sym..eh_frame_hdr={"realname":".eh_frame_hdr","demangled":false,"offset":134515872,"size":0,"space":"symbols.sections"}
sym..fini={"realname":".fini","demangled":false,"offset":134515532,"size":0,"space":"symbols.sections"}
sym..gnu.hash={"realname":".gnu.hash","demangled":false,"offset":134513068,"size":0,"space":"symbols.sections"}
sym..gnu.version={"realname":".gnu.version","demangled":false,"offset":134513492,"size":0,"space":"symbols.sections"}
sym..gnu.version_r={"realname":".gnu.version_r","demangled":false,"offset":134513520,"size":0,"space":"symbols.sections"}
sym..got={"realname":".got","demangled":false,"offset":134520816,"size":0,"space":"symbols.sections"}
sym..got.plt={"realname":".got.plt","demangled":false,"offset":134520820,"size":0,"space":"symbols.sections"}
sym..init={"realname":".init","demangled":false,"offset":134513672,"size":0,"space":"symbols.sections"}
sym..interp={"realname":".interp","demangled":false,"offset":134512980,"size":0,"space":"symbols.sections"}
sym..jcr={"realname":".jcr","demangled":false,"offset":134520612,"size":0,"space":"symbols.sections"}
sym..note.ABI_tag={"realname":".note.ABI-tag","demangled":false,"offset":134513000,"size":0,"space":"symbols.sections"}
sym..note.gnu.build_id={"realname":".note.gnu.build-id","demangled":false,"offset":134513032,"size":0,"space":"symbols.sections"}
sym..plt={"realname":".plt","demangled":false,"offset":134513728,"size":0,"space":"symbols.sections"}
sym..rel.dyn={"realname":".rel.dyn","demangled":false,"offset":134513568,"size":0,"space":"symbols.sections"}
sym..rel.plt={"realname":".rel.plt","demangled":false,"offset":134513592,"size":0,"space":"symbols.sections"}
sym..rodata={"realname":".rodata","demangled":false,"offset":134515560,"size":0,"space":"symbols.sections"}
sym..text={"realname":".text","demangled":false,"offset":134513904,"size":0,"space":"symbols.sections"}
sym.__do_global_ctors_aux={"realname":"__do_global_ctors_aux","demangled":false,"offset":134515488,"size":42,"space":"symbols"}
sym.__do_global_dtors_aux={"realname":"__do_global_dtors_aux","demangled":false,"offset":134513952,"size":85,"space":"symbols"}
sym.__i686.get_pc_thunk.bx={"realname":"__i686.get_pc_thunk.bx","demangled":false,"offset":134515474,"size":4,"space":"symbols"}
sym.__libc_csu_fini={"realname":"__libc_csu_fini","demangled":false,"offset":134515472,"size":2,"space":"symbols"}
sym.__libc_csu_init={"realname":"__libc_csu_init","demangled":false,"offset":134515360,"size":97,"space":"symbols"}
sym._fini={"realname":"_fini","demangled":false,"offset":134515532,"size":26,"space":"symbols"}
sym._init={"realname":"_init","demangled":false,"offset":134513672,"size":46,"space":"symbols"}
sym._start={"realname":"_start","demangled":false,"offset":134513904,"size":0,"space":"symbols"}
sym.afterSubstr={"realname":"afterSubstr","demangled":false,"offset":134514246,"size":133,"space":"symbols"}
sym.frame_dummy={"realname":"frame_dummy","demangled":false,"offset":134514048,"size":35,"space":"symbols"}
sym.imp.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":134513840,"size":6,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":134513744,"size":6,"space":"imports"}
sym.imp.fputc={"realname":"fputc","demangled":false,"offset":134513872,"size":6,"space":"imports"}
sym.imp.fwrite={"realname":"fwrite","demangled":false,"offset":134513760,"size":6,"space":"imports"}
sym.imp.getenv={"realname":"getenv","demangled":false,"offset":134513776,"size":6,"space":"imports"}
sym.imp.open={"realname":"open","demangled":false,"offset":134513824,"size":6,"space":"imports"}
sym.imp.ptrace={"realname":"ptrace","demangled":false,"offset":134513888,"size":6,"space":"imports"}
sym.imp.putchar={"realname":"putchar","demangled":false,"offset":134513856,"size":6,"space":"imports"}
sym.imp.puts={"realname":"puts","demangled":false,"offset":134513792,"size":6,"space":"imports"}
sym.isLib={"realname":"isLib","demangled":false,"offset":134514379,"size":259,"space":"symbols"}
sym.main={"realname":"main","demangled":false,"offset":134514638,"size":709,"space":"symbols"}
sym.syscall_gets={"realname":"syscall_gets","demangled":false,"offset":134514132,"size":114,"space":"symbols"}
sym.syscall_open={"realname":"syscall_open","demangled":false,"offset":134514084,"size":48,"space":"symbols"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
functions=s
imports=s
platform.ports=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s
symbols.sections=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
